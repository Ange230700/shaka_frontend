# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Cancel in-progress runs of the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: 'true'

jobs:
  test:
    name: Lint • Typecheck • Test
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: 📁 Prep folders used by postinstall (Leaflet images)
        run: mkdir -p public/images

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 ESLint
        run: npm run lint

      # Your lint script uses --fix; fail CI if it changed files
      - name: 🚨 Fail if ESLint fixed files
        run: |
          if ! git diff --quiet; then
            echo "ESLint produced changes. Please run 'npm run lint' locally and commit the fixes."
            git --no-pager diff
            exit 1
          fi

      - name: 🧪 TypeScript type-check
        run: npx tsc -p . --noEmit

      - name: ✅ Unit tests (Jest)
        run: npm run test:ci -- --coverage

      - name: 📤 Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          if-no-files-found: ignore

  build_web:
    name: Build Web (Expo export)
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: 📁 Prep folders used by postinstall (Leaflet images)
        run: mkdir -p public/images

      - name: 📦 Install dependencies
        run: npm ci

      # Provide any public env your app expects at build time
      - name: 🌍 Configure build env
        env:
          EXPO_PUBLIC_API_BASE_URL: ${{ secrets.EXPO_PUBLIC_API_BASE_URL }}
        run: |
          echo "EXPO_PUBLIC_API_BASE_URL=${EXPO_PUBLIC_API_BASE_URL}" >> $GITHUB_ENV

      - name: 🏗️ Export web
        # --platform web ensures a web build; output defaults to ./dist for Expo 53
        run: npm run export -- --platform web

      - name: 📤 Upload web artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist
          if-no-files-found: error
